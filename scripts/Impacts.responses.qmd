---
title: "Impacts.responses"
format: html
editor: visual
---

#### Load packages

```{r}
packages <- c("ggplot2", "readxl", "readr", "ggthemes", "GGally", "caret", "dplyr", "ggformula", "ggpmisc", "gt", "ggpubr", "glmtoolbox", "report", "gtools", "tidyr", "car", "lmtest", "chron", "readxl", "stringr", "imputeTS", "lubridate", "mgcv", "ggplot2", "stringr", "devtools")
invisible(lapply(packages, library, character.only= TRUE))

source_gist("https://gist.github.com/gavinsimpson/e73f011fdaaab4bb5a30")

standard_theme <- theme_bw() + theme(panel.border = element_rect(fill=NA, colour = "black")) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(legend.text.align= 0, legend.title= element_text(size = 12), legend.text = element_text(size= 10), axis.text=element_text(size=10), axis.title=element_text(size=12))

setwd("/Users/sallydowd/Documents/GitHub/NC-Ecosystem-indicators")
RecFishing <- read_csv("data/finalized/e1981RecreationalEffortNCSD.csv")
CommLicense <- read_csv("data/finalized/e1994CommercialLicensesNCCB.csv")
VesselLength <- read_csv("data/finalized/e1989CommercialVesselLengthSD.csv")
ClamsLandings <- read_csv("data/finalized/e1994ClamsLandingsNCSD.csv")
OysterLandings <- read_csv("data/finalized/e1994OysterLandingsNCSD.csv")
CommercialTrips <- read_csv("data/finalized/e1994CommercialTripsNCSD.csv")
MenhadenLandings <- read_csv("data/finalized/e1985MenhadenLandingsNCSD.csv")
CommLandings <- read_csv("data/finalized/e1994CommercialLandingsBillNCSD.csv")
BirdNests <- read_csv("data/finalized/b1977BirdNestsNCSD.csv")

names(RecFishing) <- tolower(names(RecFishing))
RecFishing <- filter(RecFishing, year < 2020)
names(CommLicense) <- tolower(names(CommLicense))
CommLicense <- filter(CommLicense, year < 2020)
names(VesselLength) <- tolower(names(VesselLength))
VesselLength <- filter(VesselLength, year < 2020)
names(ClamsLandings) <- tolower(names(ClamsLandings))
ClamsLandings <- filter(ClamsLandings, year < 2020)
names(OysterLandings) <- tolower(names(OysterLandings))
OysterLandings <- filter(OysterLandings, year < 2020)
names(CommercialTrips) <- tolower(names(CommercialTrips))
CommercialTrips <- filter(CommercialTrips, year < 2020)
names(MenhadenLandings) <- tolower(names(MenhadenLandings))
MenhadenLandings <- filter(MenhadenLandings, year < 2020)
names(CommLandings) <- tolower(names(CommLandings))
CommLandings <- filter(CommLandings, year < 2020)
names(BirdNests) <- tolower(names(BirdNests))
BirdNests <- filter(BirdNests, year < 2020)
```

#### Running GAMs for Impacts and Responses Indicators

```{r}
#GAM description
#K value: number of basis functions (k), determines how wiggly the model is, should be between 5 and # of years in dataset, start with 2* number of decades in dataset 
#gam.check output: 
  ##Low p-value (k-index<1) may indicate that k is too low, especially if edf is close to k'. Change k from there and see if p-value increases/k-index, compare k and edf values in addition to looking at p value
#s means smooth
  ##If model doesn't converge than the results are likely not correct (too many parameters in model or not enough data)
  ##small (significant) p values indicate residuals are not randomly distributed (not enough basis functions)
#Plots:
  ##: qqplot comparing model residuals to normal distribution, well fit model residuals will be close to straight line
  ##: histogram of residuals, expect to have symmetric shape
  ##: plot of residual values: should be evenely distributed around 0
  ##: perfect model would form straight line, should cluster around 1:1 line 
```

```{r}
#GAM diagnostics

#Determine k: start with k value from this function
k_det <- function(df){
df1 <- df
((max(df1$year) - max(df1$year) %% 10) - (min(df1$year) - min(df1$year) %% 10))/10 * 2
}

k_det(RecFishing) #6
k_det(CommLicense) #4
k_det(VesselLength) #6
k_det(ClamsLandings) #4
k_det(OysterLandings) #4
k_det(CommercialTrips) #4
k_det(MenhadenLandings) #6
k_det(CommLandings) #4

#Create a GAM - adjust k and remember to check model
gam_diagn <- function(dep_var, k_value, df){
mod <- gam(dep_var ~ s(year, k= k_value), data = df)
print(summary(mod))
gam.check(mod)
}

##Rec fishing 
gam_diagn(RecFishing$angler_trips, 6, RecFishing) #p value not significant 
mod_RecFishing <- gam(angler_trips ~ s(year, k= 6), data = RecFishing)
gam_diagn(RecFishing$angler_trips, 6, RecFishing) #p value not significant 
mod_RecFishing <- gam(angler_trips ~ s(year, k= 6), data = RecFishing)

##Comm License
unique(CommLicense$productname)
#ETS: old commercial license, CFVR: Commercial Fishing Vessel Registration, SCFL: new commercial license-Standard Commercial Fishing License, RSCFL: Retired Standard Commercial Fishing License, Shellfish w/o SCFL: Available to NC residents, allows fishermen to harvest shellfish commercially without having a SCFLE
#These are issued licenses: to get at active fishing effort, we will need to consider a license actively used in fishing (active participant data)

###Dealer
CommLicense_dealer <- CommLicense %>% filter(productname == "Dealer")
k_det(CommLicense_dealer)
gam_diagn(CommLicense_dealer$licenses, 7, CommLicense_dealer) #p value sig. at k= 4, 7 is lowest that looks acceptable
mod_CommLicense_dealer <- gam(licenses ~ s(year, k= 7), data = CommLicense_dealer)

###Old and new commercial fishing license: line where you combined 
CommLicense_ETSSCFL <- CommLicense %>% filter(productname == "ETS" | productname == "SCFL")
k_det(CommLicense_ETSSCFL)
gam_diagn(CommLicense_ETSSCFL$licenses, 7, CommLicense_ETSSCFL) #p value sig. at k= 4, 7 is lowest that looks acceptable
mod_CommLicense_ETSSCFL <- gam(licenses ~ s(year, k= 7), data = CommLicense_ETSSCFL)

###CFVR
CommLicense_CFVR <- CommLicense %>% filter(productname == "CFVR")
k_det(CommLicense_CFVR)
gam_diagn(CommLicense_CFVR$licenses, 8, CommLicense_CFVR) #p value sig. at k= 2, 8 is lowest that looks acceptable
CommLicense_CFVR <- gam(licenses ~ s(year, k= 8), data = CommLicense_CFVR)

###RSCFL
CommLicense_RSCFL <- CommLicense %>% filter(productname == "RSCFL")
k_det(CommLicense_RSCFL) 
gam_diagn(CommLicense_RSCFL$licenses, 6, CommLicense_RSCFL) #p value sig. at k= 2, 6 is lowest that looks acceptable
mod_CommLicense_RSCFL <- gam(licenses ~ s(year, k= 6), data = CommLicense_RSCFL)

###Shellfish w/o SCFL: recheck this 
CommLicense_shellnoSCFL <- CommLicense %>% filter(productname == "Shellfish w/o SCFL")
k_det(CommLicense_shellnoSCFL) 
gam_diagn(CommLicense_shellnoSCFL$licenses, 7, CommLicense_shellnoSCFL) #p value sig. at k= 2, 9 is lowest that looks acceptable
mod_CommLicense_RSCFL <- gam(licenses ~ s(year, k= 6), data = CommLicense_RSCFL)

##Vessel Length
unique(VesselLength$vessellengthrange)

VesselLength_18 <- VesselLength %>% filter(vessellengthrange %in% "0-18ft.")
k_det(VesselLength_18)
gam_diagn(VesselLength_18$count, 6, VesselLength_18) #p value not sig. at k= 6 but graphs look bad --> doesn't look great with anything 
VesselLength_18 <- gam(count ~ s(year, k= 6), data = VesselLength_18) 

VesselLength_38 <- VesselLength %>% filter(vessellengthrange %in% "19-38ft.")
k_det(VesselLength_38)
gam_diagn(VesselLength_38$count, 10, VesselLength_38) #p value not sig. at k= 6 but graphs look bad, didn't finish 
VesselLength_38 <- gam(count ~ s(year, k= 6), data = VesselLength_38)

##Clams landings 
ClamsLandings_edt <- ClamsLandings %>% mutate(ratioprpub = private_lbs/public_lbs) %>% select(year, ratioprpub)
k_det(ClamsLandings_edt)
gam_diagn(ClamsLandings_edt$ratioprpub, 7, ClamsLandings_edt) #p value sig. at k= 4, graphs fine at k=7 
mod_ClamsLandings_edt <- gam(ratioprpub ~ s(year, k= 6), data = ClamsLandings_edt)

##Oyster landings
OysterLandings_edt <- OysterLandings %>% mutate(ratioprpub = private_lbs/public_lbs) %>% select(year, ratioprpub)
k_det(OysterLandings_edt)
gam_diagn(OysterLandings_edt$ratioprpub, 8, OysterLandings_edt) #p value sig. at k= 4, graphs fine but not great at k= 8
mod_OysterLandings_edt <- gam(ratioprpub ~ s(year, k= 8), data = OysterLandings_edt)

##Commercial trips: 
CommercialTrips <- CommercialTrips %>% select(year, sum_trips) 
k_det(CommercialTrips)
gam_diagn(CommercialTrips$sum_trips, 6, CommercialTrips) #p value sig. at k= 4, graphs fine at k= 6 
mod_CommercialTrips <- gam(sum_trips ~ s(year, k= 6), data = CommercialTrips)

##Menhaden landings:
MenhadenLandings$species[which(MenhadenLandings$species == "Menhaden bait")] = "Menhaden Bait"
MenhadenLandings$species[which(MenhadenLandings$species == "Menhaden Red")] = "Menhaden Reduction"

###Menhaden Bait: 
MenhadenLandings_Bait <- MenhadenLandings %>% filter(species == "Menhaden Bait")
k_det(MenhadenLandings_Bait)
gam_diagn(MenhadenLandings_Bait$pounds, 6, MenhadenLandings_Bait) #p value not sig. at k= 6, graphs don't improve that much 
mod_MenhadenLandings_Bait <- gam(pounds ~ s(year, k= 6), data = MenhadenLandings_Bait)

###Menhaden Reduction: 
MenhadenLandings_Reduction <- MenhadenLandings %>% filter(species == "Menhaden Reduction")
k_det(MenhadenLandings_Reduction)
gam_diagn(MenhadenLandings_Reduction$pounds, 4, MenhadenLandings_Reduction) #p value not sig. at k= 4, graphs don't improve that much 
mod_MenhadenLandings_Reduction <- gam(pounds ~ s(year, k= 4), data = MenhadenLandings_Reduction)

##Commercial landings
CommLandings$pounds <- as.numeric(CommLandings$pounds)

CommLandings_BayScallop  <- CommLandings %>% filter(species %in% "Bay Scallop")
k_det(CommLandings_BayScallop)
gam_diagn(CommLandings_BayScallop$pounds, 4, CommLandings_BayScallop) #p value not sig. at k= 4, graphs don't improve that much 
mod_CommLandings_BayScallop <- gam(pounds ~ s(year, k= 4), data = CommLandings_BayScallop)

CommLandings_BlueCrab <- CommLandings %>% filter(species %in% "Blue Crab")
k_det(CommLandings_BlueCrab)
gam_diagn(CommLandings_BlueCrab$pounds, 5, CommLandings_BlueCrab) #p value sig. at k= 4
mod_CommLandings_BlueCrab <- gam(pounds ~ s(year, k=  5), data = CommLandings_BlueCrab)

CommLandings_HardClams <- CommLandings %>% filter(species %in% "Hard Clams")
k_det(CommLandings_HardClams)
gam_diagn(CommLandings_HardClams$pounds, 6, CommLandings_HardClams) #p value sig. at k= 4, graphs look ok ish
mod_CommLandings_HardClams <- gam(pounds ~ s(year, k=  6), data = CommLandings_HardClams)

CommLandings_Kingfishes  <- CommLandings %>% filter(species %in% "Kingfishes")
k_det(CommLandings_Kingfishes)
gam_diagn(CommLandings_Kingfishes$pounds, 5, CommLandings_Kingfishes) #p value not sig. at 4, graphs look ok
mod_CommLandings_Kingfishes <- gam(pounds ~ s(year, k=  6), data = CommLandings_Kingfishes)

CommLandings_Oyster  <- CommLandings %>% filter(species %in% "Oyster")
k_det(CommLandings_Oyster)
gam_diagn(CommLandings_Oyster$pounds, 7, CommLandings_Oyster) #p value not sig. at 4, graphs best at 7 
mod_CommLandings_Oyster <- gam(pounds ~ s(year, k=  7), data = CommLandings_Oyster)

CommLandings_RedDrum  <- CommLandings %>% filter(species %in% "Red Drum")
k_det(CommLandings_RedDrum)
gam_diagn(CommLandings_RedDrum$pounds, 5, CommLandings_RedDrum) #p value not sig. at 4, graphs fine at 5- not much imrpovement after 
mod_CommLandings_RedDrum <- gam(pounds ~ s(year, k=  5), data = CommLandings_RedDrum)

CommLandings_RiverHerring  <- CommLandings %>% filter(species %in% "River Herring")
k_det(CommLandings_RiverHerring)
gam_diagn(CommLandings_RiverHerring$pounds, 5, CommLandings_RiverHerring) #graphs don't change after 5 much
mod_CommLandings_RiverHerring <- gam(pounds ~ s(year, k=  5), data = CommLandings_RiverHerring)

CommLandings_SouthernFlounder  <- CommLandings %>% filter(species %in% "Southern Flounder")
k_det(CommLandings_SouthernFlounder)
gam_diagn(CommLandings_SouthernFlounder$pounds, 6, CommLandings_SouthernFlounder) #graphs don't change after 5 much
mod_CommLandings_SouthernFlounder <- gam(pounds ~ s(year, k=  6), data = CommLandings_SouthernFlounder)

CommLandings_SpottedSeatrout  <- CommLandings %>% filter(species %in% "Spotted Seatrout")
k_det(CommLandings_SpottedSeatrout)
gam_diagn(CommLandings_SpottedSeatrout$pounds, 4, CommLandings_SpottedSeatrout) 
mod_CommLandings_SpottedSeatrout <- gam(pounds ~ s(year, k=  4), data = CommLandings_SpottedSeatrout)

CommLandings_StripedBass  <- CommLandings %>% filter(species %in% "Striped Bass")
k_det(CommLandings_StripedBass)
gam_diagn(CommLandings_StripedBass$pounds, 6, CommLandings_StripedBass) 
mod_CommLandings_StripedBass <- gam(pounds ~ s(year, k=  6), data = CommLandings_StripedBass)

CommLandings_StripedMullet  <- CommLandings %>% filter(species %in% "Striped Mullet")
k_det(CommLandings_StripedMullet)
gam_diagn(CommLandings_StripedMullet$pounds, 4, CommLandings_StripedMullet) 
mod_CommLandings_StripedMullet <- gam(pounds ~ s(year, k=  4), data = CommLandings_StripedMullet)

CommLandings_BrownShrimp  <- CommLandings %>% filter(species %in% "Shrimp, Brown")
k_det(CommLandings_BrownShrimp)
gam_diagn(CommLandings_BrownShrimp$pounds, 4, CommLandings_BrownShrimp) #response vs. fitted doesn't look good no matter the k value 
mod_CommLandings_BrownShrimp <- gam(pounds ~ s(year, k=  4), data = CommLandings_BrownShrimp)

CommLandings_PinkShrimp  <- CommLandings %>% filter(species %in% "Shrimp, Pink")
k_det(CommLandings_PinkShrimp)
gam_diagn(CommLandings_PinkShrimp$pounds, 4, CommLandings_PinkShrimp) #p value not significant, graphs look bad no matter the k value 
mod_CommLandings_PinkShrimp <- gam(pounds ~ s(year, k=  4), data = CommLandings_PinkShrimp)

CommLandings_WhiteShrimp  <- CommLandings %>% filter(species %in% "Shrimp, White")
k_det(CommLandings_WhiteShrimp)
gam_diagn(CommLandings_WhiteShrimp$pounds, 6, CommLandings_WhiteShrimp) #normality graphs acceptable at this p value
mod_CommLandings_WhiteShrimp <- gam(pounds ~ s(year, k=  6), data = CommLandings_WhiteShrimp)

##Birds
BirdNests <- BirdNests %>% select(year, sum_nests)
k_det(BirdNests)
gam_diagn(BirdNests$sum_nests, 8, BirdNests) #assumptions aren't met but doesn't get better with k 
mod_BirdNests <- gam(sum_nests ~ s(year, k=  6), data = BirdNests)

##Commercial participants 


```

#### GAM graphs 
```{r}
pdata <- with(RecFishing, data.frame(year = year))
p2_mod <- predict(mod_RecFishing, newdata = pdata,  type = "terms", se.fit = TRUE)
intercept = as.numeric(attr(p2_mod,"constant")) # look at p2_mod and extract the intercept
pdata <- transform(pdata, p2_mod = p2_mod$fit[,1], se2 = p2_mod$se.fit[,1])

#  Now that we have the model prediction, the next step is to calculate the first derivative
#  Then determine which increases and decreases are significant
Term = "year"
n <- as.numeric(length(unique(pdata$year)))
mod.d <- Deriv(mod_RecFishing, n=n) # n is the number of years
mod.dci <- confint(mod.d, term = Term)
mod.dsig <- signifD(pdata$p2_mod, d = mod.d[[Term]]$deriv, upper = mod.dci[[Term]]$upper, lower = mod.dci[[Term]]$lower)

df <- RecFishing
# Take a quick look to make sure it appears ok before final plotting
plot(angler_trips ~ year, data = df)
lines(angler_trips ~ year, data = df)
lines(p2_mod+intercept ~ year, data = pdata, type = "n")
lines(p2_mod+intercept ~ year, data = pdata)
lines(unlist(mod.dsig$incr)+intercept ~ year, data = pdata, col = "#0072B2", lwd = 3)
lines(unlist(mod.dsig$decr)+intercept ~ year, data = pdata, col = '#D55E00', lwd = 3)
```

```{r}
#check linear model of entire dataset. Then move on to the next chunk based on the results
linearMod<- lm(angler_trips ~ year, data=df)
summary(linearMod)

#check out the post 1997 linear model, then move on to the next chunk based on the results
dfpost1997 <- filter(df, year > 1997)
linearMod<- lm(angler_trips ~ year, data=dfpost1997)
summary(linearMod)

#Plot names
name <- "Number of Recreational Angler Trips"
nospacesname <- gsub(" ", "", name)
```

```{r}
ggplot() + 
  geom_line(data = df, aes(x = year, y = angler_trips), color = 'grey53', alpha = 0.6) +
  geom_point(data = df, aes(x = year, y = angler_trips), color = 'gray53', alpha = 0.6) + 
  geom_line(data=pdata, aes(x = year, y = p2_mod+intercept), se = FALSE, color = 'black', linetype = 'twodash', size = 1) + 
  geom_line(data = pdata, aes(y = unlist(mod.dsig$incr)+intercept, x = year), color = "#0072B2", size = 1) + 
  geom_line(data = pdata, aes(y = unlist(mod.dsig$decr)+intercept, x = year), color = "#D55E00", size = 1) +   geom_smooth(data = dfpost1997, aes(x = year, y = angler_trips), method = lm, se = FALSE, color = "#009E73") +
   geom_smooth(data = df, aes(x = year, y = angler_trips), method = lm, se = FALSE, color = "gray", alpha = 0.2) +
  theme_bw() +
  labs (y = "Angler Trips", x = 'Year', title = paste0(name)) + 
  theme(plot.title=element_text(size = 16,face = 'bold',hjust = 0.5), axis.title=element_text(size = 14, face = 'bold'), axis.text= element_text(color = 'black', size = 12)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggsave("/users/sallydowd/desktop/rec.fishing.png")
```
